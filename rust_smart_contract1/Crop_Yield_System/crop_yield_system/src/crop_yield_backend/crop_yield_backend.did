type Application = record {
  date : text;
  product_name : text;
  quantity : float64;
};
type Crop = record {
  id : nat64;
  ferterlizer_application : vec Application;
  ph_level : float64;
  infection_monitoring : vec record { text; text };
  actual_yield : float64;
  growth_stage : GrowthStage;
  weather_conditions : text;
  pest_and_disease_details : vec record { text; text };
  planting_date : text;
  soil_quality : vec record { text; text };
  field_location : text;
  expected_yield : float64;
  expected_rainfall : float64;
  crop_type : text;
  variety : text;
  pestcides_application : vec Application;
};
type GrowthStage = variant {
  Germination;
  Harvesting;
  Ripening;
  Fruiting;
  Vegetative;
  Planting;
  Flowering;
};
service : {
  create_crop : (
      text,
      text,
      text,
      text,
      text,
      float64,
      float64,
      vec record { text; text },
      vec record { text; text },
      vec record { text; text },
      float64,
      float64,
    ) -> (Crop);
  delete_crop : (nat64) -> (opt Crop);
  get_all_crops : () -> (vec Crop) query;
  get_crop_details : (nat64) -> (opt Crop) query;
  get_ferterlizer_application : (nat64) -> (opt vec Application) query;
  get_growth_stage : (nat64) -> (opt GrowthStage) query;
  get_pestcides_application : (nat64) -> (opt vec Application) query;
  log_ferterlizer_application : (nat64, Application) -> (opt Crop);
  log_pestcides_application : (nat64, Application) -> (opt Crop);
  update_crop_details : (
      nat64,
      float64,
      vec record { text; text },
      vec record { text; text },
      vec record { text; text },
      float64,
      float64,
    ) -> (opt Crop);
  update_growth_stage : (nat64, GrowthStage) -> (opt Crop);
}
